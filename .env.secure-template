# =============================================================================
# SECURE ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# 
# üîê SECURITY NOTICE:
# - NEVER commit this file with real values to version control
# - Use different keys for each environment (dev/staging/prod)
# - Store production keys in secure key management systems
# - Rotate keys regularly
# 
# üìã SETUP INSTRUCTIONS:
# 1. Copy this file to .env
# 2. Generate secure keys using: node scripts/setup_secure_keys.js
# 3. Update values below with your actual configuration
# 4. Add .env to .gitignore to prevent accidental commits
# 
# =============================================================================

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================

# Environment type (development, staging, production)
NODE_ENV=development

# Network name for identification
NETWORK_NAME=decentralized-vllm-network

# Node type (bootstrap, worker, owner, user)
NODE_TYPE=bootstrap

# Unique node identifier (auto-generated if not set)
NODE_ID=

# =============================================================================
# BLOCKCHAIN CONFIGURATION
# =============================================================================

# Ethereum RPC endpoint
# Development: http://localhost:8545
# Mainnet: https://mainnet.infura.io/v3/YOUR_PROJECT_ID
# Polygon: https://polygon-rpc.com
ETH_NODE_URL=http://localhost:8545

# Chain ID (1337 for local, 1 for mainnet, 137 for polygon)
CHAIN_ID=1337

# Gas price in gwei (leave empty for auto)
GAS_PRICE=

# Gas limit for transactions
GAS_LIMIT=8000000

# =============================================================================
# WALLET CONFIGURATION (üîê SECURITY CRITICAL)
# =============================================================================

# üö® NEVER USE HARDCODED PRIVATE KEYS IN PRODUCTION!
# 
# RECOMMENDED APPROACHES:
# 1. Key files: Use setup_secure_keys.js to generate secure key files
# 2. Environment injection: Set via deployment scripts
# 3. Key management: Use HashiCorp Vault, AWS KMS, etc.
# 4. Hardware wallets: For high-value operations

# Bootstrap Node Credentials
# DEV ONLY - Replace with secure key management in production
BOOTSTRAP_PRIVATE_KEY_FILE=~/.decentralized-vllm/keys/bootstrap_private.key
BOOTSTRAP_ACCOUNT_FILE=~/.decentralized-vllm/keys/bootstrap_account.key

# Model Owner Credentials  
OWNER_PRIVATE_KEY_FILE=~/.decentralized-vllm/keys/owner_private.key
OWNER_ACCOUNT_FILE=~/.decentralized-vllm/keys/owner_account.key

# Worker Node Credentials
WORKER_PRIVATE_KEY_FILE=~/.decentralized-vllm/keys/worker_private.key
WORKER_ACCOUNT_FILE=~/.decentralized-vllm/keys/worker_account.key

# User Credentials
USER_PRIVATE_KEY_FILE=~/.decentralized-vllm/keys/user_private.key
USER_ACCOUNT_FILE=~/.decentralized-vllm/keys/user_account.key

# Fallback for development (‚ö†Ô∏è NEVER USE IN PRODUCTION)
# These are Hardhat's default test accounts - public knowledge!
DEV_BOOTSTRAP_PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
DEV_BOOTSTRAP_ACCOUNT=0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# External IP address or domain for this node
# Use actual IP/domain in production, localhost for development
STATIC_IP=localhost

# P2P port for node communication
BOOTSTRAP_PORT=30303

# WebSocket port for real-time communication
WS_PORT=30304

# Enable network encryption (recommended for production)
ENABLE_TLS=false

# TLS certificate paths (required if ENABLE_TLS=true)
TLS_CERT_PATH=
TLS_KEY_PATH=

# =============================================================================
# IPFS CONFIGURATION
# =============================================================================

# IPFS API endpoint
IPFS_HOST=127.0.0.1
IPFS_PORT=5001
IPFS_PROTOCOL=http

# IPFS Gateway for file access
IPFS_GATEWAY=http://127.0.0.1:8080

# IPFS connection timeout (milliseconds)
IPFS_TIMEOUT=10000

# Enable IPFS pubsub for real-time updates
IPFS_PUBSUB=true

# =============================================================================
# AI INFERENCE CONFIGURATION
# =============================================================================

# vLLM inference server
VLLM_HOST=127.0.0.1
VLLM_PORT=8000

# Ray cluster configuration
RAY_HOST=127.0.0.1
RAY_PORT=6379

# Model cache directory
MODEL_CACHE_DIR=./model_cache

# Maximum model cache size (GB)
MAX_CACHE_SIZE_GB=50

# GPU memory allocation (percentage)
GPU_MEMORY_FRACTION=0.8

# =============================================================================
# RESOURCE ALLOCATION (for worker nodes)
# =============================================================================

# CPU contribution (percentage of available cores)
CPU_CONTRIBUTION=10

# RAM contribution (percentage of available memory)  
RAM_CONTRIBUTION=15

# GPU contribution (percentage of GPU memory)
GPU_CONTRIBUTION=10

# Storage contribution (percentage of available disk space)
STORAGE_CONTRIBUTION=5

# Enable resource enforcement via cgroups (Linux only)
ENFORCE_RESOURCE_LIMITS=false

# =============================================================================
# SERVICE PORTS
# =============================================================================

# Health monitoring
HEALTH_PORT=9090
METRICS_PORT=9091

# Web interfaces
STREAMLIT_PORT=8501
MOBILE_SERVER_PORT=8080
OWNER_API_PORT=8002
WORKER_API_PORT=8001

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable structured JSON logging
STRUCTURED_LOGGING=true

# Log file path (leave empty for console only)
LOG_FILE=

# Maximum log file size (MB)
MAX_LOG_SIZE_MB=100

# Number of log files to retain
LOG_RETENTION_COUNT=5

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Enable API authentication
ENABLE_AUTH=false

# JWT secret for API authentication (generate with: openssl rand -hex 32)
JWT_SECRET=

# API rate limiting (requests per minute)
RATE_LIMIT=60

# Enable CORS for web interfaces
ENABLE_CORS=true

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8501

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

# Enable Prometheus metrics
ENABLE_METRICS=true

# Metrics collection interval (seconds)
METRICS_INTERVAL=30

# Health check interval (seconds)
HEALTH_CHECK_INTERVAL=30

# Alert webhook URL for critical issues
ALERT_WEBHOOK_URL=

# =============================================================================
# DATABASE CONFIGURATION (if using persistent storage)
# =============================================================================

# Database type (sqlite, postgresql, mysql)
DB_TYPE=sqlite

# Database connection string
# SQLite: ./data/network.db
# PostgreSQL: postgresql://user:pass@localhost:5432/dbname
DB_CONNECTION_STRING=./data/network.db

# Database connection pool size
DB_POOL_SIZE=10

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable debug mode (more verbose logging)
DEBUG=false

# Enable hot reloading for development
HOT_RELOAD=false

# Mock external services for testing
MOCK_SERVICES=false

# Skip blockchain interactions for faster testing
SKIP_BLOCKCHAIN=false

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# Enable production optimizations
PRODUCTION_MODE=false

# Cluster mode for load balancing
CLUSTER_MODE=false

# Number of worker processes (0 = auto-detect)
WORKER_PROCESSES=0

# Enable automatic backups
ENABLE_BACKUPS=false

# Backup storage location
BACKUP_STORAGE_PATH=./backups

# Backup retention period (days)
BACKUP_RETENTION_DAYS=30

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# Slack webhook for notifications
SLACK_WEBHOOK_URL=

# Discord webhook for notifications  
DISCORD_WEBHOOK_URL=

# Email configuration for alerts
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=
ALERT_EMAIL_TO=

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Custom configuration file path
CUSTOM_CONFIG_PATH=

# Environment-specific overrides
CONFIG_OVERRIDES=

# Feature flags (comma-separated)
FEATURE_FLAGS=

# Experimental features
ENABLE_EXPERIMENTAL=false