# MCP Server Configuration
# This file defines the MCP servers that the inference engine can connect to

mcp_servers:
  # File system operations
  filesystem:
    transport: stdio
    command: python
    args: ["-m", "mcp_server_filesystem"]
    description: "File system operations - read, write, list files"
    enabled: true
    
  # Web search and browsing
  brave_search:
    transport: stdio
    command: python
    args: ["-m", "mcp_server_brave_search"]
    description: "Web search using Brave Search API"
    enabled: false
    env:
      BRAVE_API_KEY: "${BRAVE_API_KEY}"
      
  # Database operations
  sqlite:
    transport: stdio
    command: python
    args: ["-m", "mcp_server_sqlite"]
    description: "SQLite database operations"
    enabled: false
    
  # Git operations
  git:
    transport: stdio
    command: python
    args: ["-m", "mcp_server_git"]
    description: "Git repository operations"
    enabled: true
    
  # Time and calendar
  time:
    transport: stdio
    command: python
    args: ["-m", "mcp_server_time"]
    description: "Time and calendar operations"
    enabled: true
    
  # Custom MCP server via SSE
  custom_sse:
    transport: sse
    url: "http://localhost:3001/sse"
    description: "Custom SSE-based MCP server"
    enabled: false
    
  # Memory/context management
  memory:
    transport: stdio
    command: python
    args: ["-m", "mcp_server_memory"]
    description: "Persistent memory and context management"
    enabled: true

  # =============================================================================
  # PAYLOGIC FINANCIAL SERVICES MCP SERVERS
  # =============================================================================

  # Automated payment workflows
  automated_payments:
    transport: stdio
    command: node
    args: ["../payLogic/servers/automated-payments-server.js"]
    description: "Automated payment workflows, scheduling, and bulk payments"
    enabled: true
    env:
      BITNOB_API_KEY: "${BITNOB_API_KEY}"
      
  # Real-time transaction monitoring  
  transaction_monitor:
    transport: stdio
    command: node
    args: ["../payLogic/servers/transaction-monitor-server.js"]
    description: "Real-time transaction monitoring, alerts, and analytics"
    enabled: true
    env:
      BITNOB_API_KEY: "${BITNOB_API_KEY}"
      
  # Global payment capabilities
  global_payments:
    transport: stdio
    command: node
    args: ["../payLogic/servers/global-payments-server.js"]
    description: "International payments, virtual cards, and currency conversion"
    enabled: true
    env:
      BITNOB_API_KEY: "${BITNOB_API_KEY}"
      
  # Automated billing system
  automated_billing:
    transport: stdio
    command: node
    args: ["../payLogic/servers/automated-billing-server.js"]
    description: "Subscription billing, usage tracking, and revenue management"
    enabled: true
    env:
      BITNOB_API_KEY: "${BITNOB_API_KEY}"
      
  # Original PayLogic server (legacy)
  paylogic_legacy:
    transport: stdio
    command: node
    args: ["../payLogic/payServer.js"]
    description: "Basic Bitcoin payments and invoicing (legacy)"
    enabled: false
    env:
      BITNOB_API_KEY: "${BITNOB_API_KEY}"

# MCP Client Configuration
mcp_client:
  # Timeout for MCP operations (seconds)
  timeout: 30
  
  # Maximum number of concurrent MCP connections
  max_connections: 5
  
  # Enable/disable MCP functionality globally
  enabled: true
  
  # Retry configuration
  retry:
    max_attempts: 3
    delay: 1.0
    backoff_factor: 2.0
    
  # Logging configuration
  logging:
    level: INFO
    log_mcp_calls: true
    log_tool_results: false