[tool:pytest]
# Pytest configuration for the orchestrator tests

# Test discovery
testpaths = .
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    mcp: marks tests that require MCP servers
    blockchain: marks tests that require blockchain connection
    ipfs: marks tests that require IPFS connection

# Minimum version
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Coverage options
[coverage:run]
source = .
omit = 
    test_*.py
    *_test.py
    __pycache__/*
    .pytest_cache/*
    venv/*
    .venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod